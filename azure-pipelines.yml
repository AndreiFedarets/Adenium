# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  sourcesDirectory: '$(Build.SourcesDirectory)'
  stagingDirectory: '$(Build.ArtifactStagingDirectory)'
  nugetSource: 'nuget.org'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion: '0'
  minorVersion: '1'
  buildVersion: '$(Build.BuildID)'
  revisionVersion: '0'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Nuget Install'

- task: NuGetCommand@2
  displayName: 'Solution Nuget Restore'
  inputs:
    restoreSolution: '$(solution)'

- task: update-assembly-info@2
  displayName: 'Solution Version Update'
  inputs:
    assemblyInfoFiles: '$(sourcesDirectory)\**\AssemblyInfo.cs'
    fileVersionMajor: $(majorVersion)
    fileVersionMinor: $(minorVersion)
    fileVersionBuild: $(buildVersion)
    assemblyVersionMajor: $(majorVersion)
    assemblyVersionMinor: '0'
    assemblyVersionBuild: '0'
    assemblyVersionRevision: '0'

- task: VSBuild@1
  displayName: 'Solution Build'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: 'Package Create'
  inputs:
    command: 'pack'
    packagesToPack: '$(sourcesDirectory)\nuget.nuspec'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'
    packDestination: '$(stagingDirectory)'
    basePath: '$(sourcesDirectory)'
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(buildVersion)'

- script: nuget push $(stagingDirectory)\*.nupkg -ApiKey $(nuGetApiKey) -Source $(nugetSource) -SkipDuplicate
  displayName: 'Push Package ($(nugetSource))'

- task: VSTest@2
  displayName: 'Tests Run'
  enabled: false
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
