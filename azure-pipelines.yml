# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  rootPath: '$(Build.SourcesDirectory)'
  sourcesPath: '$(rootPath)\source'
  buildPath: '$(rootPath)\build'
  destinationPath: '$(Build.ArtifactStagingDirectory)'
  solutionNet40: '$(sourcesPath)\Layex.net40.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion: '0'
  minorVersion: '1'
  buildVersion: '0'
  revisionVersion: '0'
  nugetPackageName: 'Layex.$(majorVersion).$(minorVersion).$(buildVersion).nupkg'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install Nuget'

- task: NuGetCommand@2
  displayName: 'Restore Nuget Packages'
  inputs:
    restoreSolution: '$(solutionNet40)'

- task: update-assembly-info@2
  displayName: 'Update Version'
  inputs:
    assemblyInfoFiles: '$(sourcesPath)\net40\**\AssemblyInfo.cs'
    fileVersionMajor: $(majorVersion)
    fileVersionMinor: $(minorVersion)
    fileVersionBuild: $(buildVersion)
    assemblyVersionMajor: $(majorVersion)
    assemblyVersionMinor: '0'
    assemblyVersionBuild: '0'
    assemblyVersionRevision: '0'

- task: VSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '$(solutionNet40)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: 'Create Package'
  inputs:
    command: 'pack'
    packagesToPack: '$(rootPath)\nuget.nuspec'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'
    packDestination: '$(destinationPath)'
    basePath: '$(rootPath)'
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(buildVersion)'

- task: NuGetAuthenticate@0
  enabled: false
  inputs:
      nuGetServiceConnections: 'Nuget'

- script: nuget push '$(destinationPath)\($nugetPackageName)' -ApiKey $(nuGetApiKey) -Source nuget.org
  displayName: 'Push Package (Nuget.org)'

- task: NuGetCommand@2
  displayName: 'Push Package (AzureDevOps)'
  enabled: false
  inputs:
    command: 'push'
    packagesToPush: '$(destinationPath)/*.nupkg;!$(destinationPath)/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '0d52f31e-bc80-4c37-99fe-19802cd11cb0/c5ecfae1-ce0d-450b-b609-b53d998055ba'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(destinationPath)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: VSTest@2
  displayName: 'Run Tests'
  enabled: false
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
