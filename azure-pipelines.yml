# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

#trigger:
#- master

pool:
  vmImage: 'windows-latest'

variables:
  majorVersion: '1'
  minorVersion: '0'
  buildVersion: '$(Build.BuildId)'
  revisionVersion: '0'
  suffixVersion: '-alpha'
  companyName: 'Andrei Fedarets'
  productName: 'Layex'
  productDescription: 'WPF Composite UI library based on Caliburn.Micro'
  productCopyright: 'Copyright 2019 (C) Andrei Fedarets'
  productUrl: 'https://github.com/AndreiFedarets/layex'
  solution: '**/*.sln'
  sourcesDirectory: '$(Build.SourcesDirectory)'
  stagingDirectory: '$(Build.ArtifactStagingDirectory)'
  nugetSource: 'nuget.org'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  pushPackage: startsWith(variables['Build.SourceBranch'], 'refs/heads/release')

steps:
- task: NuGetToolInstaller@1
  displayName: 'Nuget Install'

- task: NuGetCommand@2
  displayName: 'Solution Nuget Restore'
  inputs:
    restoreSolution: '$(solution)'

- task: update-assembly-info@2
  displayName: 'Solution Properties Update'
  inputs:
    assemblyInfoFiles: '$(sourcesDirectory)\**\AssemblyInfo.cs'
    company: '$(companyName)'
    product: '$(productName)'
    copyright: '$(productCopyright)'
    fileVersionMajor: '$(majorVersion)'
    fileVersionMinor: '$(minorVersion)'
    fileVersionBuild: '$(buildVersion)'
    fileVersionRevision: '$(revisionVersion)'
    assemblyVersionMajor: '$(majorVersion)'
    assemblyVersionMinor: '0'
    assemblyVersionBuild: '0'
    assemblyVersionRevision: '0'

- task: VSBuild@1
  displayName: 'Solution Build'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: replacetokens@3
  displayName: 'Package Properties Update'
  inputs:
    rootDirectory: '$(sourcesDirectory)'
    targetFiles: '*.nuspec'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: true
    tokenPrefix: '$('
    tokenSuffix: ')'

- task: NuGetCommand@2
  displayName: 'Package Create'
  enabled: '$(pushPackage)'
  inputs:
    command: 'pack'
    packagesToPack: '$(sourcesDirectory)\*.nuspec'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'
    packDestination: '$(stagingDirectory)'

- script: nuget push $(stagingDirectory)\*.nupkg -ApiKey $(nuGetApiKey) -Source $(nugetSource) -NoSymbols
  condition: '$(pushPackage)'
  displayName: 'Package Push ($(nugetSource))'

- task: VSTest@2
  displayName: 'Tests Run'
  enabled: false
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
